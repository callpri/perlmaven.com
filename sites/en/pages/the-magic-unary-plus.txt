=title The magic unary plus (+)
=timestamp 2015-01-15T14:30:01
=indexes B::Deparse, +
=status show
=books beginner
=author szabgab
=archive 1
=comments_disqus_enable 0

=abstract start

In the <a href="/how-to-get-the-size-of-a-file-in-perl">article about the size of a file</a> I had a code snippet <hl>say (stat $filename)[7];</hl>
that did not work as first expected. One of the solutions was to add a <hl>+</hl> sign in-front of the parentheses: <hl>say +(stat $filename)[7];</hl>

What does that <hl>+</hl> do there? - one reader asked.

=abstract end

The <a href="https://metacpan.org/pod/distribution/perl/pod/perlfunc.pod#print">documentation</a> explains that the <hl>+</hl> separates
the <hl>print</hl> function from the parentheses <hl>(</hl> and tells perl that these are not the parentheses wrapping the parameters of the print
function.

That might satisfy you, but if you are further intersted you can use the <a href="https://metacpan.org/pod/B::Deparse">B::Deparse</a> module
to ask perl how does it understand this code-snippet:

<code lang="perl">
print +(stat $filename)[7];
</code>

We save that content in the <b>plus.pl</b> file and run <hl>perl -MO=Deparse plus.pl</hl>. The result is:

<code lang="perl">
print((stat $filename)[7]);
</code>

and also

<code>
files/plus.pl syntax OK
</code>

As you can see the otherwise unnecessary <hl>+</hl> sign has disappeared but, instead of that perl added an extra pair of parentheses.
These are the parens wrapping the parameters of the <hl>print</hl> function.


<h2>How does it work with say?</h2>

Now that we saw this with the <hl>print</hl> function, lets make the seemingly obvious change and replace <hl>print</hl> by <hl>say</hl> in
the <b>plus.pl</b> file:

<code lang="perl">
say +(stat $filename)[7];
</code>

run <hl>perl -MO=Deparse plus.pl</hl>, and the result is:

<code lang="perl">
'say' + (stat $filename)[7];
</code>

<b>What???</b>

That's surprising, and for a few seconds you don't really know what does that mean, but then you remember that <hl>say</hl>
is not part of perl by default. You need to tell somehow that you want the <hl>say</hl> function to be part of your language.
For example by writing <hl>use 5.010;</hl>.

So we change the code to this:

<code lang="perl">
use 5.010;

say +(stat $filename)[7];
</code>

run <hl>perl -MO=Deparse files/plus.pl</hl> and get the following result:

<code lang="perl">
sub BEGIN {
    require 5.01;
}
no feature;
use feature ':5.10';
say((stat $filename)[7]);
</code>

That a lot of code, but at least we have our extra parens back wrapping the parameters of <hl>say</hl>.

<h2>Conclusion</h2>

<a href="https://metacpan.org/pod/B::Deparse">B::Deparse</a> can be useful when you need to know how perl
understands a code snippet.

Check out the other <a href="/search/B::Deparse">articles about B::Deparse</a>.


