=title usage: GLOB->new([FILENAME [,MODE [,PERMS]]])
=timestamp 2013-11-20T07:30:01
=indexes GLOB, open
=status show
=author szabgab
=comments_disqus_enable 0

=abstract start

I am the current maintainer of the
<a href="https://metacpan.org/release/SVG">SVG (Scalable Vector Graphics)</a>
distribution on CPAN, and thus a the other day ago I got an e-mail about a crash:

=abstract end

The code looks like this:

<code lang="perl">
use strict;
use warnings;

use SVG;
my $svg = SVG->new( width => 10, height => 10 );
my $filename = "svg.xml";
open( SVG, ">", $filename );
print SVG $svg->xmlify;
close( SVG );
</code>

Can you spot the problem?

Running the above script I get the folling error message:

<hl>usage: GLOB->new([FILENAME [,MODE [,PERMS]]]) at ... line 5.</hl>

<h2>Always use lexical variables for file handles!</h2>

Besides the fact the return value of <hl>open</hl> is not
checked, the main problem is that the programmer happened to use the
same name (<hl>SVG</hl>) for the file-handle as the name of the
module. By the time the execution reached the <hl>SVG->new</hl> line
perl already decided that instead of the module, SVG will represent
the file-GLOB. (This happens at compile time.)

Hence the error is reported on the line of the <hl>SVG->new</hl> call.

I think this is a lovely error. Probably perl should have warned when it noticed
that we try to overwrite the SVG name-space with a GLOB, but I have to admit
a very similar problem happened to me too a while ago in Python.


My conclusion from this error is to remind people
to <a href="/open-files-in-the-old-way">always use lexical variables as file handles</a>!


The working solution looks like this:

<code lang="perl">
use strict;
use warnings;

use SVG;
my $svg = SVG->new( width => 10, height => 10 );
my $filename = "svg.xml";
open( my $SVG, ">", $filename ) or die;
print $SVG $svg->xmlify;
close( $SVG );
</code>

