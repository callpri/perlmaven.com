=title Add "404 Not Found" page
=timestamp 2015-05-28T21:10:01
=indexes SCO, Template::Toolkit, 404
=tags screencast
=status show
=books search_cpan_org
=author szabgab
=comments_disqus_enable 0

=abstract start

Now that we have added a <a href="/add-another-static-page">static page</a> to the site we can turn our attention
to the 404 page. That too is a static page with another special need.

Let's convert that to use the SCO look-and-feel as well.

=abstract end

<screencast file="add-404-not-found-page" youtube="5E3-zJe4dGg" />

<h2>Create the 404 template</h2>

The <a href="/create-skeleton-psgi-application">PSGI skeleton</a> still has the code sending a plain
<hl>404 Not Found</hl> page for every other request:

<code lang="perl">
return [ '404', [ 'Content-Type' => 'text/html' ], ['404 Not Found'], ];
</code>

The 404 page should look just like any other page on search.cpan.org, it even has the cpanstats at the bottom
we <a href="http://search.cpan.org/xyz">worked so hard to try to replicate</a>.

First thing is to create the template with the unique content of the 404 page.

We can visit a page that does not exists, for example http://search.cpan.org/xyz and click on view-source.
There we can find the content specific to this page and copy it tot a file called
<a href="https://github.com/szabgab/MetaCPAN-SCO/blob/e865a6c2fd04ac3edb5026180de2b567c73a4763/tt/404.tt">tt/404.tt</a>.
That was quite easy. Now we need to use that template to create the HTML file.

We can just replace

<code lang="perl">
return [ '404', [ 'Content-Type' => 'text/html' ], ['404 Not Found'], ];
</code>

by

<code lang="perl">
template('404');
</code>

and visit any <a href="http://localhost:5000/abc">not existing page</a> to see the results.


<h2>Change the HTTP response code</h2>

That looks good. The only problem is that the <hl>template()</hl> function returns
all the pages with a <hl>200 Success</hl> code and in the case of the 404 page,
we would like the HTTP status code to be 404.

In order to see what HTTP status code a page returns try <hl>curl -I</hl> (that's an upper case i)

Main page:

<code>
$ curl -I http://search.cpan.org/
HTTP/1.1 200 OK
Date: Wed, 19 Nov 2014 09:17:39 GMT
Server: Plack/Starman (Perl)
Content-Length: 3643
Content-Type: text/html
Connection: close
</code>

Not existing page on search.cpan.org:

<code>
$ curl -I http://search.cpan.org/abc
HTTP/1.1 404 Not Found
Date: Wed, 19 Nov 2014 09:17:42 GMT
Server: Plack/Starman (Perl)
Content-Length: 4006
Content-Type: text/html
Connection: close
</code>


Not existing page on the clone:
<code>
$ curl -I http://localhost:5000/abc
</code>

We could change the <hl>template</hl> function to accept a value for the status code, but
in almost every other page this should be 200. So making all other places pass 200 seemed
like a waste of clarity. Making the parameter optional and then setting it to default to 200
would work, but seemed a bit complex to implement.

Finally I settled with just calling <hl>template()</hl>, capturing its output, and replacing the
HTTP status code before returning the value to be displayed by the browser.

We know that <hl>template()</hl> will return a 3-element array reference in which the first value is the
status code, the second is the header, and the third is the content of the page.

So I wrote this:

<code lang="perl">
   my $reply = template('404');
   return [ '404', [ 'Content-Type' => 'text/html' ], $reply->[2], ];
</code>

Instead of the hard-coded '404 Not Found' string I put in the content returned by the
<hl>template()</hl> function in the 3rd place.

Actually, looking at the code now, it might be cleaner to write this:

<code lang="perl">
   my $reply = template('404');
   $reply->[0] = '404';
   return $reply;
</code>

but I Am not sure in that.

That is, replacing the status-code in the reply we received from the <hl>template()</hl> function.
We can visit the <a href="http://localhost:5000/abc">page</a> again to make sure it still works
and we can look at its header:

<code>
$ curl -I http://localhost:5000/abc
</code>


That brings us to the next <a href="https://github.com/szabgab/MetaCPAN-SCO/commit/e865a6c2fd04ac3edb5026180de2b567c73a4763">commit</a>

<code>
$ git add .
$ git commit -m "add 404 Not Found page based on the content on sco. Use template for it"
</code>


